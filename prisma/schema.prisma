generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  name         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  transactions Transactions[]
  circles      Circles[]
  circleUsers  CircleUsers[]
}

model Circles {
    id          Int        @id @default(autoincrement())
    name        String
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    userId      Int?
    user        Users?     @relation(fields: [userId], references: [id])
    transactions Transactions[]
    circleUsers CircleUsers[]
}

model CircleUsers {
    id          Int        @id @default(autoincrement())
    userId      Int?
    user        Users?     @relation(fields: [userId], references: [id])
    circleId    Int?
    circle      Circles?   @relation(fields: [circleId], references: [id])
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
}

model Transactions {
  id          Int        @id @default(autoincrement())
  amount      BigInt
  description String
  date        DateTime
  categoryId  Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt
  userId      Int?
  category    Categories @relation(fields: [categoryId], references: [id])
  user        Users?     @relation(fields: [userId], references: [id])
  circleId    Int?
  circle      Circles?   @relation(fields: [circleId], references: [id])
}

model Categories {
  id           Int            @id @default(autoincrement())
  name         String
  color        String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Transactions Transactions[]
}
