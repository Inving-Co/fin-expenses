generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique
  name         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  circleUsers  CircleUsers[]
  circles      Circles[]
  transactions Transactions[]
}

model Circles {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  userId       String?        @db.Uuid
  circleUsers  CircleUsers[]
  user         Users?         @relation(fields: [userId], references: [id])
  transactions Transactions[]
}

model CircleUsers {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId                 String?   @db.Uuid
  circleId               String?   @db.Uuid
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @default(now()) @updatedAt
  latestReportReceivedAt DateTime?
  receiveReport          Boolean   @default(true)
  circle                 Circles?  @relation(fields: [circleId], references: [id])
  user                   Users?    @relation(fields: [userId], references: [id])
}

model Transactions {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount      Int
  description String
  date        DateTime
  categoryId  String     @db.Uuid
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt
  userId      String?    @db.Uuid
  circleId    String?    @db.Uuid
  category    Categories @relation(fields: [categoryId], references: [id])
  circle      Circles?   @relation(fields: [circleId], references: [id])
  user        Users?     @relation(fields: [userId], references: [id])
}

model Categories {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  color        String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  Transactions Transactions[]
}
